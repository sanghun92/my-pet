name: Deploy My pet to Amazon EC2

on:
  push:
    branches:
      - develop
    pull_request:
      - develop

jobs:
  deploy:
    name: DEPLOY
    runs-on: ubuntu-22.04

    # Nodejs 런타임 정보 설정
    strategy:
      matrix:
        node-version: [ 18 ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.ACTION_TOKEN }}

      - name: Make deploy folder
        run: |
          mkdir -p deploy
          cp -r scripts deploy/scripts/
          cp appspec.yml deploy/
        shell: bash

      ##########################################
      # FrontEnd
      ##########################################
      - name: Set up Node ${{ matrix.node-version }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      # npm 모듈 설치
      - name: Install npm modules
        run: npm install
        shell: bash
        working-directory: ./frontend

      # NextJS 빌드
      - name: Build with NextJS
        run: npm run build
        shell: bash
        working-directory: ./frontend

      # NextJS 빌드 파일 복사
      - name: Copy NextJS built files to the deploy folder
        run: |
          mkdir -p deploy/frontend
          cp -r frontend/package.json deploy/frontend/
          cp -r frontend/ecosystem.config.js deploy/frontend/
          cp -r frontend/.env.production deploy/frontend/
          cp -r frontend/.next deploy/frontend/
        shell: bash

      ##########################################
      # Backend
      ##########################################
      # JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # Gradle 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      # Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      # Gradle 빌드 파일 복사
      - name: Copy Gradle built files to the deploy folder And Make zip file
        run: |
          mkdir -p deploy/backend
          cp my-pet-app/build/libs/*.jar deploy/backend/
          cd deploy && zip -r $GITHUB_SHA.zip *
        shell: bash

      ##########################################
      # AWS
      ##########################################
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ${{ secrets.AWS_REGION }} ./deploy/$GITHUB_SHA.zip s3://${{ secrets.AWS_DEPLOY_BUCKET }}/$GITHUB_SHA.zip

      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ secrets.AWS_DEPLOY_APP }} \
          --deployment-group-name ${{ secrets.AWS_DEPLOY_GROUP }} \
          --s3-location bucket=${{ secrets.AWS_DEPLOY_BUCKET }},bundleType=zip,key=$GITHUB_SHA.zip
