plugins {
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

configurations {
    asciidoctorExt
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // db
    implementation 'mysql:mysql-connector-java'

    // modules
    implementation project(':my-pet-config')
    implementation project(':my-pet-core')
    implementation project(':my-pet-core-infra')

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.google.guava:guava:14.0'

    // to fix [javax.annotation.meta.When not found]
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test

    sources {
        include("**/index.adoc","**/common/*.adoc")
    }
    baseDirFollowsSourceFile()
}

tasks.register('copyDocument', Copy) {
    dependsOn asciidoctor
    doFirst {
        delete file('src/main/resources/static/docs')
    }
    from file("build/docs/asciidoc")
    into file("build/resources/main/static/docs")
    into file("src/main/resources/static/docs")
}

bootJar {
    enabled = true
    dependsOn asciidoctor
}

jar { enabled = false }

build {
    dependsOn copyDocument
}
